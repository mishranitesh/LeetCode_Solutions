Write a function that takes an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight).

11      3
Explanation: Integer 11 has binary representation 00000000000000000000000000001011 
128     1
Explanation: Integer 128 has binary representation 00000000000000000000000010000000

-------------------------------------------------------------------------------------------------------------

class Solution {
public:
    int hammingWeight(uint32_t n) {
        
        int ret_weight = 0;
        
        /*
         * Brute Force Approach -- O(n) -> n is number of bits
         */
        /*while (n > 0) {
            ret_weight += (n & 1);
            n >>= 1;
        }*/
        
        /*
         * Efficient Approach -- Using bit-fiddling technique -- O(k) -> k is number of set bits
         */
        while (n > 0) {
            ++ret_weight;
            n = n & (n - 1); // Erase lowest set bit from the number
        }
        
        return ret_weight;
    }
};

-------------------------------------------------------------------------------------------------------------