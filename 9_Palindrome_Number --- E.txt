Determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward.
Input: 121
Output: true
Input: -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Input: 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
Input: 0
Output: true

-------------------------------------------------------------------------------------------------------------

class Solution {
public:
    bool isPalindrome (int x) {
        
        // Corner Cases
        if (x < 0 || (x != 0 && x % 10 == 0)) {
            return false;
        } else if (x < 10) {
            return true;
        }
        
        /*
         * Brute Force Approach -- Using vector<int>
         */
        /*int digits_cnt = static_cast<int>(floor(log10(x)) + 1), i = 0;
        std::vector<int> digits_vec(digits_cnt);
        while (x) {
            digits_vec[i++] = (x % 10);
            x /= 10;
        }
        for (int i = 0; i < digits_cnt; ++i) {
            if (digits_vec[i] != digits_vec[digits_cnt - i - 1]) {
                return false;
            }
        }
        return true;*/
        
        /*
         * Efficient Approach -- Using arithmetic operations
         */
        int digits_cnt = static_cast<int>(floor(log10(x)) + 1), msb_mask = static_cast<int>(pow(10, digits_cnt - 1));
        while (x) {
            if ((x % 10) != (x / msb_mask)) {
                return false;
            }
            
            x %= msb_mask;
            x /= 10;
            msb_mask /= 100;
        }
        return true;
    }
};

-------------------------------------------------------------------------------------------------------------