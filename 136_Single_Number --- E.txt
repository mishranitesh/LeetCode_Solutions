Given a non-empty array of integers, every element appears twice except for one. Find that single one.
Note:
Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

Input: [2,2,1]
Output: 1
Input: [4,1,2,1,2]
Output: 4

-------------------------------------------------------------------------------------------------------------

class Solution {
public:
    int singleNumber(vector<int>& nums) {
        
        std::size_t index = 0;
        std::sort(nums.begin(), nums.end());
        
        while (nums[index] == nums[index + 1]) {
            index += 2;
        }
        
        return nums[index];
    }
};