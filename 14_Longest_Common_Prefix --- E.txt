Write a function to find the longest common prefix string amongst an array of strings.
If there is no common prefix, return an empty string "".
["flower","flow","flight"] --> "fl"
["dog","racecar","car"] --> ""
["lowerabc","fwerfgv","fewezzar"] --> ""
[] --> ""
["aa"] --> ""

-------------------------------------------------------------------------------------------------------------

class Solution {
public:
    
    static bool sort_len(std::string str1, std::string str2) {
        return str1.length() < str2.length();
    }
    
    string longestCommonPrefix(vector<string>& strs) {
        
        if (strs.size() == 0) return std::string("");
        if (strs.size() == 1) return strs[0];
        
        // Logic here
        std::string result_str;
        int indx = 0;
        bool flag = true;
        
        // Sort vector according to length of strings inside it
        std::sort(strs.begin(), strs.end(), sort_len);
        
        std::string temp_str = strs[0];
        
        while (temp_str.length() != 0) {
            
            //std::cout << "A:: " << temp_str << std::endl;
            
            for (int i = 1; i < strs.size(); ++i) {
                if (temp_str[0] != strs[i][indx]) {
                    std::cout << "FAIL" << std::endl;
                    flag = false;
                }
            }
            
            if (!flag) break;
            
            result_str.push_back(temp_str[0]);
            
            ++indx;
            temp_str.erase(0, 1);
            //std::cout << "B:: " << temp_str << std::endl;
        }
        
        return result_str;
    }
};

-------------------------------------------------------------------------------------------------------------