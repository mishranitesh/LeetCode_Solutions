Given two integers dividend and divisor, divide two integers without using multiplication, division and mod operator.
Return the quotient after dividing dividend by divisor.
The integer division should truncate toward zero.

10              3           3
7               -3          -2
1               1           1
1               -1          -1
-1              1           -1
-1              -1          1
-2147483648     -1          2147483647
-2147483648     1           -2147483648


-------------------------------------------------------------------------------------------------------------

class Solution {
public:
    int divide(int dividend, int divisor) {
        
        // Corner case for handling overflow
        if (!divisor || (dividend == INT_MIN && divisor == -1))
            return INT_MAX;
        
        /*
         * Brute Force Approach -- Using subtraction and addition operators
         */
        /*int quotient = 0;
        bool is_neg = false;
        
        if (((dividend >= 0) && (divisor < 0)) || ((dividend < 0) && (divisor > 0))) {
            is_neg = true;
        }
        
        long long dvd = labs(dividend);
        long long dvs = labs(divisor);
        
        while (dvd >= dvs) {
            ++quotient;
            dvd -= dvs;
        }
        
        return (is_neg) ? (quotient * -1) : quotient;*/
        
        /*
         * Efficient Approach -- Using bitwise operators
         */
        int quotient = 0, power = sizeof(int) * 8;
        long long dvd = labs(dividend);
        long long dvs = labs(divisor);
        // Initial value for divisor_power = pow(2, power) * divisor --> using bitwise <<operator
        unsigned long long divisor_power = static_cast<unsigned long long>(dvs) << power;
        
        bool is_neg = false;
        if (((dividend >= 0) && (divisor < 0)) || ((dividend < 0) && (divisor > 0))) {
            is_neg = true;
        }
        
        while (dvd >= dvs) {
            while (divisor_power > dvd) {
                divisor_power >>= 1;
                --power;
            }
            
            quotient += 1 << power;
            dvd -= divisor_power;
        }
        
        return (is_neg) ? (quotient * -1) : quotient;
    }
};

-------------------------------------------------------------------------------------------------------------