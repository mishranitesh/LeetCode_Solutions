The Hamming distance between two integers is the number of positions at which the corresponding bits are different.
Given two integers x and y, calculate the Hamming distance.
Note:
0 ≤ x, y < 231.

Example:
Input: x = 1, y = 4
Output: 2
Explanation:
1   (0 0 0 1)
4   (0 1 0 0)
       ↑   ↑
The above arrows point to positions where the corresponding bits are different.

-------------------------------------------------------------------------------------------------------------

class Solution {
public:
    
    int rec_helper(int x, int y) {
        if (x == y) return 0;
        
        return ((x & 1) == (y & 1)) ? rec_helper(x >> 1, y >> 1) : 1 + rec_helper(x >> 1, y >> 1);
    }
    
    int hammingDistance(int x, int y) {
        if (x < 0 || y < 0) return 0;
        
        // FIRST SOLUTION
        /*
        //std::vector<int> bin_x, bin_y;
        int count = 0;
        
        for (int i = 31; i >= 0; --i) {
            int temp_x = x >> i;
            //bin_x.push_back(temp_x & 1);

            int temp_y = y >> i;
            //bin_y.push_back(temp_y & 1);
            
            if ((temp_x & 1) != (temp_y & 1))
                ++count;
        }
        
        //for (auto it : bin_x)
        //    std::cout << it;
        //std::cout << std::endl;
        
        //for (auto it : bin_y)
        //    std::cout << it;
        //std::cout << std::endl;
        return count;
        */
        
        
        // SECOND SOLUTION
        return rec_helper(x, y);
    }
};

-------------------------------------------------------------------------------------------------------------